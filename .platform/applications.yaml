  # This file describes an application. You can have multiple applications
  # in the same project.
  #
  # See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

  # The name of this app. Must be unique within a project.
- name: app

  # The runtime the application uses.
  type: 'java:11'
  # The hooks executed at various points in the lifecycle of the application.
  hooks:
      build: |
        # mkdir -p $PLATFORM_CACHE_DIR/.global/
        # rsync -r --update $PLATFORM_CACHE_DIR/.global/ .global
        bash brew_install.sh readline ncurses xz zlib python@3.9
        eval $($PLATFORM_APP_DIR/.linuxbrew/bin/brew shellenv)
        alias python=python3.9
        alias pip=pip3.9
        export CFLAGS="-I$(brew --prefix)/include" 
        export LDFLAGS="-L$(brew --prefix)/lib"
        cd serve
        python ./ts_scripts/install_dependencies.py
        cd ~
        pip install torchserve torch-model-archiver torch-workflow-archiver 
        # The next is needed for the demo
        python --version
        which pip
        pip install captum PyYAML
        # rsync -r .global/ $PLATFORM_CACHE_DIR/.global
      deploy: |
        if [ ! -f /app/model_store/mnist.mar ]
        then
          torch-model-archiver --model-name mnist --version 1.0 --model-file serve/examples/image_classifier/mnist/mnist.py --serialized-file serve/examples/image_classifier/mnist/mnist_cnn.pt --handler  serve/examples/image_classifier/mnist/mnist_handler.py --export-path model_store
        else
          echo "Model archive already exists"
        fi
        
  resources: 
    base_memory: 1024
    memory_ratio: 1024
  # The size of the persistent disk of the application (in MB).
  disk: 1024
  # The relationships of the application with services or other applications.
  #
  # The left-hand side is the name of the relationship as it will be exposed
  # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
  # side is in the form `<service name>:<endpoint name>`.
  mounts:
      'model_store':
          source: service
          service: files
          source_path: model
      'logs':
          source: service
          service: files
          source_path: logs

  # The configuration of app when it is exposed to the web.
  web:
      commands:
          start: torchserve --start --model-store model_store --models mnist=mnist.mar --ts-config config.properties

  source:
    operations:
      auto-update:
        command: |
          curl -fsS https://raw.githubusercontent.com/platformsh/source-operations/main/setup.sh | { bash /dev/fd/3 sop-autoupdate; } 3<&0
      
